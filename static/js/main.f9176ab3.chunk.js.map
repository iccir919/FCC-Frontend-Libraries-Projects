{"version":3,"sources":["alarm.mp3","LengthInput.js","Time.js","App.js","index.js"],"names":["module","exports","LengthInput","props","id","type","Button","onClick","onButtonClick","bind","this","className","length","Time","seconds","time","minutes","Math","floor","document","title","App","state","breakLength","sessionLength","timerTime","timerState","timerType","timerId","audio","React","createRef","setState","startTimer","clearInterval","direction","newTime","current","play","setInterval","tick","pause","currentTime","Container","Row","Col","changeLength","ProgressBar","min","max","now","changeTimerState","reset","ref","src","alarm","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f9176ab3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.2e12d75b.mp3\";","import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\n\nfunction LengthInput(props) {\n  return (\n    <div>\n      <h5 id={`${props.type}-label`}>{`${props.type} length`}</h5>\n      <Button\n        id={`${props.type}-decrement`}\n        onClick={props.onButtonClick.bind(this, \"decrease\", props.type)}\n        className=\"m-2\"\n      >\n        -\n      </Button>\n      <span className=\"length-number\" id={`${props.type}-length`}>\n        {props.length}\n      </span>\n      <Button\n        id={`${props.type}-increment`}\n        onClick={props.onButtonClick.bind(this, \"increase\", props.type)}\n        className=\"m-2\"\n      >\n        +\n      </Button>\n    </div>\n  );\n}\n\nexport default LengthInput;\n","import React from \"react\";\n\nfunction Time(props) {\n  let seconds = props.time % 60;\n  let minutes = Math.floor(props.time / 60);\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  document.title = `${minutes}:${seconds} - Pomodoro Clock`;\n  return (\n    <div className=\"time\">\n      <h2 id=\"timer-label\">{props.type}</h2>\n      <h3 id=\"time-left\">{`${minutes}:${seconds}`}</h3>\n    </div>\n  );\n}\n\nexport default Time;\n","import React from \"react\";\n\nimport LengthInput from \"./LengthInput\";\nimport Time from \"./Time\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\nimport alarm from \"./alarm.mp3\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timerTime: 25 * 60,\n      timerState: \"paused\",\n      timerType: \"session\",\n      timerId: \"\"\n    };\n    this.audio = React.createRef();\n  }\n\n  changeTimerState() {\n    if (this.state.timerState === \"paused\") {\n      this.setState({\n        timerState: \"playing\"\n      });\n      this.startTimer();\n    } else {\n      this.setState({\n        timerState: \"paused\"\n      });\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  changeLength(direction, type) {\n    if (this.state.timerState === \"playing\") return;\n\n    if (direction === \"increase\") {\n      if (this.state.breakLength === 60) return;\n      if (type === \"break\") {\n        this.setState(state => {\n          return { breakLength: state.breakLength + 1 };\n        });\n      } else {\n        if (this.state.sessionLength === 60) return;\n        this.setState(state => {\n          return {\n            sessionLength: state.sessionLength + 1,\n            timerTime: state.timerTime + 60\n          };\n        });\n      }\n    } else {\n      if (type === \"break\") {\n        if (this.state.breakLength <= 1) return;\n        this.setState(state => {\n          return { breakLength: state.breakLength - 1 };\n        });\n      } else {\n        this.setState(state => {\n          if (this.state.sessionLength <= 1) return;\n          return {\n            sessionLength: state.sessionLength - 1,\n            timerTime: state.timerTime - 60\n          };\n        });\n      }\n    }\n  }\n\n  tick() {\n    const newTime = this.state.timerTime - 1;\n    if (newTime >= 0) {\n      this.setState({\n        timerTime: newTime\n      });\n    } else {\n      this.audio.current.play();\n      clearInterval(this.state.timerId);\n      if (this.state.timerType === \"session\") {\n        this.setState(state => {\n          return { timerTime: state.breakLength * 60, timerType: \"break\" };\n        });\n      } else {\n        this.setState(state => {\n          return { timerTime: state.sessionLength * 60, timerType: \"session\" };\n        });\n      }\n      this.startTimer();\n    }\n  }\n\n  startTimer() {\n    let timerId = setInterval(() => {\n      this.tick();\n    }, 1000);\n    this.setState({\n      timerId: timerId\n    });\n  }\n\n  reset() {\n    clearInterval(this.state.timerId);\n    this.audio.current.pause();\n    this.audio.current.currentTime = 0;\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      timerTime: 25 * 60,\n      timerState: \"paused\",\n      timerType: \"session\",\n      timerId: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <h1>Pomodoro Clock</h1>\n        <Row>\n          <Col>\n            <LengthInput\n              onButtonClick={this.changeLength.bind(this)}\n              type=\"break\"\n              length={this.state.breakLength}\n            />\n          </Col>\n          <Col>\n            <LengthInput\n              onButtonClick={this.changeLength.bind(this)}\n              type=\"session\"\n              length={this.state.sessionLength}\n            />\n          </Col>\n        </Row>\n\n        <Time time={this.state.timerTime} type={this.state.timerType} />\n        <ProgressBar\n          min={0}\n          max={\n            this.state.timerType === \"session\"\n              ? this.state.sessionLength * 60\n              : this.state.breakLength * 60\n          }\n          now={this.state.timerTime}\n        />\n        <Row className=\"p-3\">\n          <Col>\n            <Button id=\"start_stop\" onClick={this.changeTimerState.bind(this)}>\n              {this.state.timerState === \"paused\" ? \"play\" : \"pause\"}\n            </Button>\n          </Col>\n          <Col>\n            <Button id=\"reset\" onClick={this.reset.bind(this)}>\n              reset\n            </Button>\n          </Col>\n        </Row>\n\n        <audio ref={this.audio} id=\"beep\">\n          <source src={alarm} type=\"audio/mpeg\" />\n          Your browser does not support the audio element.\n        </audio>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}