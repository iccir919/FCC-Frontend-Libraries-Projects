{"version":3,"sources":["bell-sound.mp3","Timebox.js","Timer.js","ProgressBar.js","App.js","index.js"],"names":["module","exports","Timebox","props","className","id","type","onClick","adjustLength","length","transformTime","time","hours","Math","floor","seconds","Timer","class","timerControl","isPaused","reset","timerType","timeLeft","Filler","style","width","percentage","ProgressBar","App","state","sessionLength","breakLength","timerID","bind","controlAudio","this","setInterval","newType","setState","prevState","document","title","clearInterval","direction","interval","command","audioEl","getElementById","play","pause","currentTime","src","audio","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7769841b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bell-sound.deedd54a.mp3\";","import React from \"react\";\n\nconst Timebox = (props) => {\n    return (\n        <div className=\"timebox\">\n            <h3 className=\"section-heading\" id={props.type + \"-label\"}>{props.type} length</h3>\n            <button  \n                className=\"rounded-pill\"\n                id={props.type + \"-decrement\"}\n                onClick={() => props.adjustLength(props.type, \"decrement\")}\n            >\n                decrement\n            </button>\n            <button \n                className=\"rounded-pill\"\n                id={props.type + \"-increment\"}\n                onClick={() => props.adjustLength(props.type, \"increment\")}\n            >\n                increment\n            </button>\n            <p className=\"session-length-display\" id={props.type +  \"-length\"}>{props.length}</p>\n\n        </div>\n    )\n}\n\nexport default Timebox;","import React from \"react\";\n\nconst Timer = (props) => {\n    return (\n        <div class=\"timer\">\n            <button className=\"rounded-pill\" onClick={() => props.timerControl()} id=\"start_stop\">{props.isPaused ? \"start\" : \"stop\"}</button>\n            <button className=\"rounded-pill\" onClick={() => props.reset()} id=\"reset\">reset</button>\n            <h2 className=\"section-heading\" id=\"timer-label\">{\"time left of \" + props.timerType}</h2>\n            <p className=\"timer-display\" id=\"time-left\">{transformTime(props.timeLeft)}</p>\n        </div>\n    )\n}\n\nconst transformTime = (time) => {\n    let hours = Math.floor(time / 60);\n    if (hours < 10) hours = \"0\" + hours;\n    let seconds = time % 60;\n    if (seconds < 10) seconds = \"0\" + seconds;\n    return `${hours}:${seconds}`;\n}\n\nexport default Timer;","import React from \"react\";\n\nconst ProgressBar = (props) => {\n    return (\n        <div className=\"progress-bar\">\n            <Filler percentage={props.percentage} />\n        </div>\n    )\n}\n\nconst Filler = (props) => {\n    return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n}\n\nexport default ProgressBar;","import React from 'react';\nimport Timebox from \"./Timebox\";\nimport Timer from \"./Timer\";\nimport ProgressBar from \"./ProgressBar\"\n\nimport './App.css';\nimport audio from \"./bell-sound.mp3\"\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      sessionLength: 25,\n      breakLength: 5,\n      timerType: \"session\",\n      timeLeft: 25 * 60,\n      isPaused: true,\n      timerID: null\n    }\n\n    this.adjustLength = this.adjustLength.bind(this);\n    this.timerControl = this.timerControl.bind(this);\n    this.controlAudio = this.controlAudio.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  timerControl() {\n    if (this.state.isPaused) {\n      const timerID = setInterval(() => {\n        if (this.state.timeLeft === 0) {\n          this.controlAudio(\"play\");\n          const newType = this.state.timerType === \"session\" ? \"break\" : \"session\";\n          this.setState((prevState) => ({\n            timerType: newType,\n            timeLeft: prevState[`${newType}Length`] * 60\n          }))\n        } else {\n          this.setState((prevState) => ({\n            timeLeft: prevState.timeLeft - 1\n          }))\n        }\n        document.title = transformTime(this.state.timeLeft) + \" - Pomodoro Clock\";\n      }, 1000);\n\n      this.setState({\n        timerID: timerID,\n        isPaused: false\n      })\n    } else {\n\n      document.title = \"Pomodoro Clock\"\n      clearInterval(this.state.timerID);\n      this.setState({\n        isPaused: true\n      })\n    }\n  }\n\n  adjustLength(type, direction) {\n    if (!this.state.isPaused) return\n    if (this.state[`${type}Length`] === 1 && direction === \"decrement\") return;\n    if (this.state[`${type}Length`] === 60) return;\n\n    const interval = direction === \"increment\" ? 1 : -1;\n    this.setState((prevState) => ({\n      [`${type}Length`]: prevState[`${type}Length`] + interval,\n      timeLeft: prevState.timerType === type ? (prevState[`${type}Length`] + interval) * 60 : prevState.timeLeft\n    }))\n  }\n\n  controlAudio(command) {\n    const audioEl = document.getElementById(\"beep\");\n    if (command === \"play\") {\n      audioEl.play()\n    } else {\n      audioEl.pause();\n      audioEl.currentTime = 0;\n    }\n  }\n\n  reset() {\n    this.controlAudio(\"stop\");\n    clearInterval(this.state.timerID);\n\n    this.setState({\n      sessionLength: 25,\n      breakLength: 5,\n      timerType: \"session\",\n      timeLeft: 25 * 60,\n      isPaused: true,\n      timerID: null\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1 id=\"logo\">Pomodoro Clock</h1>\n        <div className=\"timeboxes\">\n          <Timebox \n            length={this.state.sessionLength} \n            type=\"session\"\n            adjustLength={this.adjustLength}\n          />\n          <Timebox \n            length={this.state.breakLength} \n            type=\"break\" \n            adjustLength={this.adjustLength}\n          />\n        </div>\n        <Timer \n          timerType={this.state.timerType}\n          timeLeft={this.state.timeLeft}\n          isPaused={this.state.isPaused}\n          timerControl={this.timerControl}\n          reset={this.reset}\n        />\n        <ProgressBar \n          percentage={\n            this.state.timerType === \"session\" ? \n            (this.state.timeLeft / (this.state.sessionLength * 60)) * 100 :\n            (this.state.timeLeft / (this.state.breakLength * 60)) * 100\n          } />\n        <audio id=\"beep\">\n          <source src={audio}></source>\n        </audio>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst transformTime = (time) => {\n  let hours = Math.floor(time / 60);\n  if (hours < 10) hours = \"0\" + hours;\n  let seconds = time % 60;\n  if (seconds < 10) seconds = \"0\" + seconds;\n  return `${hours}:${seconds}`;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./normalize.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}